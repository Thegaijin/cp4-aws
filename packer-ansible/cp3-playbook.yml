---
- hosts: all
  become: yes
  become_method: sudo
  remote_user: ubuntu
  # become_user: root
  vars:
    ansible_python_interpreter: "/usr/bin/python3"
  tasks:
    - name: Adding python 3.6 repository
      apt_repository:
        repo: ppa:deadsnakes/ppa
        state: present

    - name: Installing python 3.6
      apt:
        name: python3.6
        update_cache: yes

    - name: Installing python3-pip nginx python3.6-gdbm
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - python3-pip
        - nginx
        - python3.6-gdbm

    - name: Starting nginx on boot
      service:
        name: nginx
        enabled: yes
        state: started

    - name: Create Project directory
      file:
        path: /var/project
        state: directory

    - name: Clone the application repo
      git:
        repo: https://github.com/Thegaijin/RecipeAPI.git
        dest: /var/project/RecipeAPI
        version: api_defence

    - name: Install the virtualenv
      command: pip3 install virtualenv

    - name: create the virtualenv
      command: virtualenv /var/project/env -p python3.6 creates="/var/project/env"

    - name: Install the project requirements
      pip:
        requirements: /var/project/RecipeAPI/requirements.txt
        virtualenv: /var/project/env

    - name: create .env file
      shell:
        chdir: /var/project/
        creates: \.env
        cmd: |
          sudo bash -c 'cat > \.env <<EOF
          export SECRET_KEY='wqrtaeysurid6lr7'
          export FLASK_CONFIG=development
          export DATABASE_URL='postgresql://thegaijin:12345678@cp3-db-instance.cjfdylbgjjyu.us-west-2.rds.amazonaws.com:5432/recipe_db'
          EOF'

    - name: Removing nginx default.conf
      command: rm -rf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default

    - name: Adding nginx configuration
      shell:
        chdir: /etc/nginx/sites-available/
        creates: default
        cmd: |
          sudo bash -c 'cat > default <<EOF
          server {
          listen 80;
              location / {
                  proxy_pass http://127.0.0.1:8000/;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Forwarded-Proto \$scheme;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
              }
          }
          EOF'

    - name: Creating symbolic link
      command: ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/

    - name: Reload nginx
      command: systemctl restart nginx

    - name: Create start script
      shell:
        chdir: /var/project/RecipeAPI/
        creates: startenv.sh
        cmd: |
          cat > startenv.sh <<EOF
          #!/bin/bash

          cd /var/project/
          source env/bin/activate
          source .env

          cd RecipeAPI

          gunicorn manage:app
          EOF

    - name: Create start service
      shell:
        chdir: /etc/systemd/system/
        creates: recipe.service
        cmd: |
          cat > recipe.service <<EOF
          [Unit]
          Description=recipe startup service
          After=network.target

          [Service]
          User=ubuntu
          ExecStart=/bin/bash /var/project/RecipeAPI/startenv.sh
          Restart=always

          [Install]
          WantedBy=multi-user.target
          EOF

    - name: Move files
      shell: |
        sudo chmod 744 /var/project/RecipeAPI/startenv.sh
        sudo chmod 664 /etc/systemd/system/recipe.service
        sudo systemctl daemon-reload
        sudo systemctl enable recipe.service
        sudo systemctl start recipe.service
